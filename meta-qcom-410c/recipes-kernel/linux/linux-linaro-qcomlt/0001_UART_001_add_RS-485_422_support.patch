diff --git a/drivers/tty/serial/msm_serial.c b/drivers/tty/serial/msm_serial.c
old mode 100644
new mode 100755
index e1de494..18cd70d
--- a/drivers/tty/serial/msm_serial.c
+++ b/drivers/tty/serial/msm_serial.c
@@ -76,6 +76,10 @@ struct msm_port {
 	bool			break_detected;
 	struct msm_dma		tx_dma;
 	struct msm_dma		rx_dma;
+#ifdef CONFIG_ARCH_ADVANTECH
+	/* RS-485 fields */
+	struct serial_rs485	rs485;
+#endif	
 };
 
 static void msm_handle_tx(struct uart_port *port);
@@ -1301,6 +1305,18 @@ static void msm_poll_put_char(struct uart_port *port, unsigned char c)
 }
 #endif
 
+#ifdef CONFIG_ARCH_ADVANTECH
+static int msm_rs485_config(struct uart_port *port,
+			    struct serial_rs485 *rs485conf)
+{
+	rs485conf->flags &= SER_RS485_RTS_ON_SEND | SER_RS485_ENABLED;
+	port->rs485 = *rs485conf;
+	memset(rs485conf->padding, 0, sizeof(rs485conf->padding));
+
+	return 0;
+}
+#endif
+
 static struct uart_ops msm_uart_pops = {
 	.tx_empty = msm_tx_empty,
 	.set_mctrl = msm_set_mctrl,
@@ -1563,6 +1579,11 @@ static int msm_serial_probe(struct platform_device *pdev)
 
 	port = msm_get_port_from_line(line);
 	port->dev = &pdev->dev;
+#ifdef CONFIG_ARCH_ADVANTECH
+	port->rs485_config = msm_rs485_config;
+	port->rs485.flags =
+		SER_RS485_RTS_ON_SEND | SER_RS485_RX_DURING_TX;
+#endif	
 	msm_port = UART_TO_MSM(port);
 
 	id = of_match_device(msm_uartdm_table, &pdev->dev);
