From cecd26f6a5ea3ebd1511c4e0ac275fbba168a900 Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Mon, 1 Feb 2016 17:57:15 +0800
Subject: [PATCH] Fixed Watchdog issue


diff --git a/drivers/watchdog/watchdog_advantech.c b/drivers/watchdog/watchdog_advantech.c
index 2802d81..41a42af 100644
--- a/drivers/watchdog/watchdog_advantech.c
+++ b/drivers/watchdog/watchdog_advantech.c
@@ -22,6 +22,10 @@
 #include <linux/delay.h>
 #include <linux/of_gpio.h>
 
+#ifdef CONFIG_ARCH_ADVANTECH
+#include <linux/proc-board.h>
+#endif
+
 #define ADV_WDT_WCR		0x00		/* Control Register */
 #define ADV_WDT_WCR_WT		(0xFF << 8)	/* -> Watchdog Timeout Field */
 #define ADV_WDT_WCR_WRE	(1 << 3)	/* -> WDOG Reset Enable */
@@ -379,15 +383,19 @@ static int adv_wdt_i2c_probe(struct i2c_client *client, const struct i2c_device_
 	gpio_direction_output(gpio_wdt_ping, flags);
 
 	/* We use common gpio pin to be watchdog-out pin (output-low) at present. We wait H/W rework, then remove.  */
-	gpio_wdt_out = of_get_named_gpio_flags(np, "wdt-out", 0, &flags);
-        if (!gpio_is_valid(gpio_wdt_ping))
-                return -ENODEV;
+	if (IS_ROM_7421) {
+		gpio_wdt_out = of_get_named_gpio_flags(np, "wdt-out", 0, &flags);
 
-	ret = devm_gpio_request_one(&client->dev, gpio_wdt_out, GPIOF_OUT_INIT_LOW, "adv_wdt.wdt_out`");
+        	if (!gpio_is_valid(gpio_wdt_out))
+                	return -ENODEV;
+
+		ret = devm_gpio_request_one(&client->dev, gpio_wdt_out, GPIOF_OUT_INIT_LOW, "adv_wdt.wdt_out`");
+
+		if (ret < 0) {
+			dev_err(&client->dev, "request gpio failed: %d\n", ret);
+			return ret;
+		}
 
-	if (ret < 0) {
-		dev_err(&client->dev, "request gpio failed: %d\n", ret);
-		return ret;
 	}
 
 	adv_wdt.timeout = clamp_t(unsigned, timeout, 1, ADV_WDT_MAX_TIME);
-- 
1.7.9.5

