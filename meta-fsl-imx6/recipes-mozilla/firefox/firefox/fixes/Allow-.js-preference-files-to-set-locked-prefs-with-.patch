From e9f0b45a4aafcd4332dd92039613939c9673d841 Mon Sep 17 00:00:00 2001
From: Mike Hommey <glandium@debian.org>
Date: Sat, 21 Jun 2008 02:48:46 +0200
Subject: Allow .js preference files to set locked prefs with lockPref()

---
 modules/libpref/prefapi.cpp  |  5 ++++-
 modules/libpref/prefapi.h    |  3 ++-
 modules/libpref/prefread.cpp | 11 ++++++++---
 modules/libpref/prefread.h   |  6 ++++--
 4 files changed, 18 insertions(+), 7 deletions(-)

diff --git a/modules/libpref/prefapi.cpp b/modules/libpref/prefapi.cpp
index b099b2d..19d2d31 100644
--- a/modules/libpref/prefapi.cpp
+++ b/modules/libpref/prefapi.cpp
@@ -995,7 +995,10 @@ void PREF_ReaderCallback(void       *closure,
                          const char *pref,
                          PrefValue   value,
                          PrefType    type,
-                         bool        isDefault)
+                         bool        isDefault,
+                         bool        isLocked)
 {
     pref_HashPref(pref, value, type, isDefault ? kPrefSetDefault : kPrefForceSet);
+    if (isLocked)
+        PREF_LockPref(pref, true);
 }
diff --git a/modules/libpref/prefapi.h b/modules/libpref/prefapi.h
index 675b384..fe3f2da 100644
--- a/modules/libpref/prefapi.h
+++ b/modules/libpref/prefapi.h
@@ -183,7 +183,8 @@ void PREF_ReaderCallback( void *closure,
                           const char *pref,
                           PrefValue   value,
                           PrefType    type,
-                          bool        isDefault);
+                          bool        isDefault,
+                          bool        isLocked);
 
 #ifdef __cplusplus
 }
diff --git a/modules/libpref/prefread.cpp b/modules/libpref/prefread.cpp
index 01612ba..a119669 100644
--- a/modules/libpref/prefread.cpp
+++ b/modules/libpref/prefread.cpp
@@ -43,6 +43,7 @@ enum {
 #define BITS_PER_HEX_DIGIT      4
 
 static const char kUserPref[] = "user_pref";
+static const char kLockPref[] = "lockPref";
 static const char kPref[] = "pref";
 static const char kTrue[] = "true";
 static const char kFalse[] = "false";
@@ -129,7 +130,7 @@ pref_DoCallback(PrefParseState *ps)
     default:
         break;
     }
-    (*ps->reader)(ps->closure, ps->lb, value, ps->vtype, ps->fdefault);
+    (*ps->reader)(ps->closure, ps->lb, value, ps->vtype, ps->fdefault, ps->flock);
     return true;
 }
 
@@ -188,6 +189,7 @@ PREF_ParseBuf(PrefParseState *ps, const char *buf, int bufLen)
                 ps->vb    = nullptr;
                 ps->vtype = PREF_INVALID;
                 ps->fdefault = false;
+                ps->flock = false;
             }
             switch (c) {
             case '/':       /* begin comment block or line? */
@@ -198,7 +200,9 @@ PREF_ParseBuf(PrefParseState *ps, const char *buf, int bufLen)
                 break;
             case 'u':       /* indicating user_pref */
             case 'p':       /* indicating pref */
-                ps->smatch = (c == 'u' ? kUserPref : kPref);
+            case 'l':       /* indicating lockPref */
+                ps->smatch = (c == 'u' ? kUserPref :
+                                         (c == 'p' ? kPref : kLockPref));
                 ps->sindex = 1;
                 ps->nextstate = PREF_PARSE_UNTIL_OPEN_PAREN;
                 state = PREF_PARSE_MATCH_STRING;
@@ -242,7 +246,8 @@ PREF_ParseBuf(PrefParseState *ps, const char *buf, int bufLen)
         /* name parsing */
         case PREF_PARSE_UNTIL_NAME:
             if (c == '\"' || c == '\'') {
-                ps->fdefault = (ps->smatch == kPref);
+                ps->fdefault = (ps->smatch != kUserPref);
+                ps->flock = (ps->smatch == kLockPref);
                 ps->quotechar = c;
                 ps->nextstate = PREF_PARSE_UNTIL_COMMA; /* return here when done */
                 state = PREF_PARSE_QUOTED_STRING;
diff --git a/modules/libpref/prefread.h b/modules/libpref/prefread.h
index 4d5ce1e..5b6a44f 100644
--- a/modules/libpref/prefread.h
+++ b/modules/libpref/prefread.h
@@ -31,7 +31,8 @@ typedef void (*PrefReader)(void       *closure,
                            const char *pref,
                            PrefValue   val,
                            PrefType    type,
-                           bool        defPref);
+                           bool        defPref,
+                           bool        lockPref);
 
 /* structure fields are private */
 typedef struct PrefParseState {
@@ -51,7 +52,8 @@ typedef struct PrefParseState {
     char       *lbend;      /* line buffer end               */
     char       *vb;         /* value buffer (ptr into lb)    */
     PrefType    vtype;      /* PREF_STRING,INT,BOOL          */
-    bool        fdefault;   /* true if (default) pref     */
+    bool        fdefault;   /* true if (default) pref        */
+    bool        flock;      /* true if pref to be locked     */
 } PrefParseState;
 
 /**
-- 
cgit v0.11.2


