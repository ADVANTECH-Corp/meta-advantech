/*
 * Copyright (C) 2011-2014 Freescale Semiconductor, Inc.
 * Jason Liu <r64343@freescale.com>
 *
 * SPDX-License-Identifier:	GPL-2.0+
 *
 * Refer doc/README.imximage for more details about how-to configure
 * and create imximage boot image
 *
 * The syntax is taken as close as possible with the kwbimage
 */

#define __ASSEMBLY__
#include <config.h>
/* image version */
IMAGE_VERSION 2

/*
 * Boot Device : one of spi, sd, sata
 * the board has no nand and eimnor
 * spinor: flash_offset: 0x0400
 * sata:   flash_offset: 0x0400
 * sd/mmc: flash_offset: 0x0400
 */

/* the same flash_offset as sd */
BOOT_FROM      sd

#ifdef CONFIG_USE_PLUGIN
/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
PLUGIN	board/freescale/mx6sabresd/plugin.bin 0x00907000
#else

#ifdef CONFIG_SECURE_BOOT
CSF CONFIG_CSF_SIZE
#endif

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *      Addr-type register length (1,2 or 4 bytes)
 *      Address   absolute address of the register
 *      value     value to be stored in the register
 */
//DDR IO TYPE:
DATA 4, 0x020e0798, 0x000c0000, // IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE - DDR_SEL=11 
DATA 4, 0x020e0758, 0x00000000, // IOMUXC_SW_PAD_CTL_GRP_DDRPKE - PKE=0 , Pull disabled for all, except DQS.

//CLOCK:
DATA 4, 0x020e0588, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0 - DSE=101, DDR_INPUT=0, HYS=0
DATA 4, 0x020e0594, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1 - DSE=101, DDR_INPUT=0, HYS=0

//ADDRESS:
DATA 4, 0x020e056c, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e0578, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e074c, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_ADDDS - DSE=110

//CONTROL:
DATA 4, 0x020e057c, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET - DSE=110, DDR_INPUT=1, HYS=0, DDR_SEL=00

DATA 4, 0x020e058c, 0x00000000, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2
DATA 4, 0x020e059c, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
DATA 4, 0x020e05a0, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
DATA 4, 0x020e078c, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_CTLDS - DSE=110


//DATA STROBE:
DATA 4, 0x020e0750, 0x00020000, // IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL - DDR_INPUT=1

DATA 4, 0x020e05a8, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0 - DSE=110
DATA 4, 0x020e05b0, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1 - DSE=110
DATA 4, 0x020e0524, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2 - DSE=110
DATA 4, 0x020e051c, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3 - DSE=110
DATA 4, 0x020e0518, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4 - DSE=110
DATA 4, 0x020e050c, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5 - DSE=110
DATA 4, 0x020e05b8, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6 - DSE=110
DATA 4, 0x020e05c0, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7 - DSE=110

//DATA:
DATA 4, 0x020e0774, 0x00020000, // IOMUXC_SW_PAD_CTL_GRP_DDRMODE- DDR_INPUT 1,diff

DATA 4, 0x020e0784, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B0DS - DSE=110
DATA 4, 0x020e0788, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B1DS - DSE=110
DATA 4, 0x020e0794, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B2DS - DSE=110
DATA 4, 0x020e079c, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B3DS - DSE=110
DATA 4, 0x020e07a0, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B4DS - DSE=110
DATA 4, 0x020e07a4, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B5DS - DSE=110
DATA 4, 0x020e07a8, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B6DS - DSE=110
DATA 4, 0x020e0748, 0x00000030, // IOMUXC_SW_PAD_CTL_GRP_B7DS - DSE=110

DATA 4, 0x020e05ac, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0 - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e05b4, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1 - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e0528, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2 - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e0520, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3 - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e0514, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4 - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e0510, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5 - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e05bc, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6 - DSE=110, DDR_INPUT=1, HYS=0
DATA 4, 0x020e05c4, 0x00000030, // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7 - DSE=110, DDR_INPUT=1, HYS=0



//######################################################
//Calibrations:
//######################################################
// ZQ:
DATA 4, 0x021b0800, 0xa1390003, // DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.

// write leveling
DATA 4, 0x021b080c, 0x001F001F,
DATA 4, 0x021b0810, 0x001F001F,

DATA 4, 0x021b480c, 0x001F001F,
DATA 4, 0x021b4810, 0x001F001F,

//DQS gating, read delay, write delay calibration values based on calibration compare of 0x00ffff00:
// It is highly recommended for the user to run calibration code on her/his specific board 
//and replace following delay values accordingly: 



//Read DQS Gating calibration
DATA 4, 0x021b083c, 0x43580368,
DATA 4, 0x021b0840, 0x03480350,
DATA 4, 0x021b483c, 0x43640364,
DATA 4, 0x021b4840, 0x035C0330,

//Read calibration
DATA 4, 0x021b0848, 0x443E3C40,
DATA 4, 0x021b4848, 0x403E3A48,

//Write calibration
DATA 4, 0x021b0850, 0x3A3C443C,
DATA 4, 0x021b4850, 0x48384C46,



//read data bit delay: (3 is the reccommended default value, although out of reset value is 0):
DATA 4, 0x021b081c, 0x33333333, // DDR_PHY_P0_MPREDQBY0DL3
DATA 4, 0x021b0820, 0x33333333, // DDR_PHY_P0_MPREDQBY1DL3
DATA 4, 0x021b0824, 0x33333333, // DDR_PHY_P0_MPREDQBY2DL3
DATA 4, 0x021b0828, 0x33333333, // DDR_PHY_P0_MPREDQBY3DL3
DATA 4, 0x021b481c, 0x33333333, // DDR_PHY_P1_MPREDQBY0DL3
DATA 4, 0x021b4820, 0x33333333, // DDR_PHY_P1_MPREDQBY1DL3
DATA 4, 0x021b4824, 0x33333333, // DDR_PHY_P1_MPREDQBY2DL3
DATA 4, 0x021b4828, 0x33333333, // DDR_PHY_P1_MPREDQBY3DL3


//setmem /32	0x021b082c =	0xf3333333 	// wr bit delay, byte 0
//setmem /32	0x021b0830 =	0xf3333333 	// wr bit delay, byte 1
//setmem /32	0x021b0834 =	0xf3333333 	// wr bit delay, byte 2
//setmem /32	0x021b0838 =	0xf3333333 	// wr bit delay, byte 3
//setmem /32	0x021b482c =	0xf3333333 	// wr bit delay, byte 4
//setmem /32	0x021b4830 =	0xf3333333 	// wr bit delay, byte 5
//setmem /32	0x021b4834 =	0xf3333333 	// wr bit delay, byte 6
//setmem /32	0x021b4838 =	0xf3333333 	// wr bit delay, byte 7


//For i.mx6qd parts of versions A & B (v1.0, v1.1), uncomment the following lines. For version C (v1.2), keep commented
//setmem /32	0x021b08c0 =	0x24911492	// fine tune SDCLK duty cyc to low - seen to improve measured duty cycle of i.mx6
//setmem /32	0x021b48c0 =	0x24911492	

//######################################################
// Complete calibration by forced measurment:
//######################################################
DATA 4, 0x021b08b8, 0x00000800, // DDR_PHY_P0_MPMUR0, frc_msr
DATA 4, 0x021b48b8, 0x00000800, // DDR_PHY_P0_MPMUR0, frc_msr

//######################################################
//MMDC init:


//528MHz
//in DDR3, 64-bit mode, only MMDC0 is initiated:
DATA 4, 0x021b0004, 0x00020036,	// MMDC0_MDPDC see spread sheet for timings
DATA 4, 0x021b0008, 0x09444040,	// MMDC0_MDOTC see spread sheet for timings
DATA 4, 0x021b000c, 0x555A79A5,	// MMDC0_MDCFG0 see spread sheet for timings. CL=8
DATA 4, 0x021b0010, 0xDB538E64,	// MMDC0_MDCFG1 see spread sheet for timings
DATA 4, 0x021b0014, 0x01ff00dd, // MMDC0_MDCFG2 - tRRD - 4ck; tWTR - 4ck; tRTP - 4ck; tDLLK - 512ck
DATA 4, 0x021b0018, 0x00001740, // MMDC0_MDMISC, RALAT=0x5
//MDMISC: RALAT kept to the high level of 5. 
//MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits: 
//a. better operation at low frequency
//b. Small performence improvment

DATA 4, 0x021b001c, 0x00008000, // MMDC0_MDSCR

DATA 4, 0x021b002c, 0x000026d2, // MMDC0_MDRWD
DATA 4, 0x021b0030, 0x005a1023, // MMDC0_MDOR - tXPR - 91ck; SDE_to_RST - 13ck; RST_to_CKE - 32ck                          , //jimmy
DATA 4, 0x021b0040, 0x00000027, // CS0_END - 0x4fffffff 

//IPU error and should remove
//DATA 4, 0x021b0400, 0x11420000, //MMDC0_MAARCR ADOPT optimized priorities. Dyn jump disabled
//DATA 4, 0x021b4400, 0x11420000,  


DATA 4, 0x021b0000, 0x831a0000, // MMDC0_MDCTL - row - 14bits; col, 10bits; burst length 8; 64-bit data bus



//######################################################
// Initialize 2GB DDR3 - Micron MT41J128M , but fit wide range of other DDR3 devices
//MR2:
DATA 4, 0x021b001c, 0x04088032, // MMDC0_MDSCR
DATA 4, 0x021b001c, 0x0408803a, // MMDC0_MDSCR


//MR3:
DATA 4, 0x021b001c, 0x00008033, // MMDC0_MDSCR
DATA 4, 0x021b001c, 0x0000803b, // MMDC0_MDSCR
//MR1:
DATA 4, 0x021b001c, 0x00468031, // MMDC0_MDSCR
DATA 4, 0x021b001c, 0x00468039, // MMDC0_MDSCR
//MR0:

DATA 4, 0x021b001c, 0x09408030, // MMDC0_MDSCR, 
DATA 4, 0x021b001c, 0x09408038, // MMDC0_MDSCR, 

//DDR device ZQ calibration:
DATA 4, 0x021b001c, 0x04008040, // MMDC0_MDSCR, 
DATA 4, 0x021b001c, 0x04008048, // MMDC0_MDSCR
//######################################################
//final DDR setup, before operation start:

DATA 4, 0x021b0020, 0x00005800, // MMDC0_MDREF, enable auto refresh, set refresh rate.

//Following ODT setup (0x11117) represents(along with obove DDR device configs) : i.mx_ODT=DDR_device_ODT=120OHm.
//User might to also interested in trying the value of 0x00000007,which represents: i.mx_ODT disabled, DDR_device_ODT=120Ohm.
//0x00000007 saves more power, and seen to run very well with Freescale RDKs. Still, running with no ODT has it's implications 
// of signal integrity and should be carefully simulated during board design.

DATA 4, 0x021b0818, 0x00033337, // DDR_PHY_P0_MPODTCTRL, ODT enable
DATA 4, 0x021b4818, 0x00033337, // DDR_PHY_P1_MPODTCTRL

DATA 4, 0x021b0004, 0x00025576, // MMDC0_MDPDC see spread sheet for timings, SDCTL power down enabled

DATA 4, 0x021b0404, 0x00011006, //MMDC0_MAPSR ADOPT power down enabled

DATA 4, 0x021b001c, 0x00000000, // MMDC0_MDSCR


/* set the default clock gate to save power */
DATA 4, 0x020c4068, 0x00C03F3F
DATA 4, 0x020c406c, 0x0030FC03
DATA 4, 0x020c4070, 0x0FFFC000
DATA 4, 0x020c4074, 0x3FF00000
DATA 4, 0x020c4078, 0x00FFF300
DATA 4, 0x020c407c, 0x0F0000F3
DATA 4, 0x020c4080, 0x000003FF

/* enable AXI cache for VDOA/VPU/IPU */
DATA 4, 0x020e0010, 0xF00000CF
/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
DATA 4, 0x020e0018, 0x007F007F
DATA 4, 0x020e001c, 0x007F007F

/*
 * Setup CCM_CCOSR register as follows:
 *
 * cko1_en  = 1	   --> CKO1 enabled
 * cko1_div = 111  --> divide by 8
 * cko1_sel = 1011 --> ahb_clk_root
 *
 * This sets CKO1 at ahb_clk_root/8 = 132/8 = 16.5 MHz
 */
DATA 4, 0x020c4060, 0x000000fb
#endif
