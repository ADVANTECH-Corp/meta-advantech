From 00699b96a65bbb86c9815b578b6975d8f051303f Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Thu, 26 May 2016 14:26:01 +0800
Subject: [PATCH 1/4] solo


diff --git a/board/freescale/mx6advantech/Kconfig b/board/freescale/mx6advantech/Kconfig
index 74cd34d..518c707 100644
--- a/board/freescale/mx6advantech/Kconfig
+++ b/board/freescale/mx6advantech/Kconfig
@@ -61,6 +61,12 @@ config SYS_CONFIG_NAME
 	default "mx6rom5420"
 
 endif
+if TARGET_MX6ROM5420B1_512M
+
+config SYS_CONFIG_NAME
+	default "mx6rom5420"
+
+endif
 if TARGET_MX6ROM5420B1_1G
 
 config SYS_CONFIG_NAME
diff --git a/board/freescale/mx6advantech/mx6advantech.c b/board/freescale/mx6advantech/mx6advantech.c
index 8258e05..ca0be80 100644
--- a/board/freescale/mx6advantech/mx6advantech.c
+++ b/board/freescale/mx6advantech/mx6advantech.c
@@ -1419,6 +1419,66 @@ const struct mx6dq_iomux_grp_regs mx6_grp_ioregs = {
 	.grp_b7ds =  0x00000030,
 };
 
+/* configure MX6SOLO/DUALLITE mmdc DDR io registers */
+const struct mx6sdl_iomux_ddr_regs mx6sdl_ddr_ioregs = {
+        /* SDCLK[0:1], CAS, RAS, Reset: Differential input, 40ohm */
+        .dram_sdclk_0 = 0x00020030,
+        .dram_sdclk_1 = 0x00020030,
+        .dram_cas = 0x00020030,
+        .dram_ras = 0x00020030,
+        .dram_reset = 0x00020030,
+        /* SDCKE[0:1]: 100k pull-up */
+        .dram_sdcke0 = 0x00003000,
+        .dram_sdcke1 = 0x00003000,
+        /* SDBA2: pull-up disabled */
+        .dram_sdba2 = 0x00000000,
+        /* SDODT[0:1]: 100k pull-up, 40 ohm */
+        .dram_sdodt0 = 0x00003030,
+        .dram_sdodt1 = 0x00003030,
+        /* SDQS[0:7]: Differential input, 40 ohm */
+        .dram_sdqs0 = 0x00000030,
+        .dram_sdqs1 = 0x00000030,
+        .dram_sdqs2 = 0x00000030,
+        .dram_sdqs3 = 0x00000030,
+        .dram_sdqs4 = 0x00000030,
+        .dram_sdqs5 = 0x00000030,
+        .dram_sdqs6 = 0x00000030,
+        .dram_sdqs7 = 0x00000030,
+
+        /* DQM[0:7]: Differential input, 40 ohm */
+        .dram_dqm0 = 0x00020030,
+        .dram_dqm1 = 0x00020030,
+        .dram_dqm2 = 0x00020030,
+        .dram_dqm3 = 0x00020030,
+        .dram_dqm4 = 0x00020030,
+        .dram_dqm5 = 0x00020030,
+        .dram_dqm6 = 0x00020030,
+        .dram_dqm7 = 0x00020030,
+};
+
+const struct mx6sdl_iomux_grp_regs mx6sdl_grp_ioregs = {
+        /* DDR3 */
+        .grp_ddr_type = 0x000c0000,
+        /* SDQS[0:7]: Differential input, 40 ohm */
+        .grp_ddrmode_ctl = 0x00020000,
+        /* disable DDR pullups */
+        .grp_ddrpke = 0x00000000,
+        /* ADDR[00:16], SDBA[0:1]: 40 ohm */
+        .grp_addds = 0x00000030,
+        /* CS0/CS1/SDBA2/CKE0/CKE1/SDWE: 40 ohm */
+        .grp_ctlds = 0x00000030,
+        /* DATA[00:63]: Differential input, 40 ohm */
+        .grp_ddrmode = 0x00020000,
+        .grp_b0ds = 0x00000030,
+        .grp_b1ds = 0x00000030,
+        .grp_b2ds = 0x00000030,
+        .grp_b3ds = 0x00000030,
+        .grp_b4ds = 0x00000030,
+        .grp_b5ds = 0x00000030,
+        .grp_b6ds = 0x00000030,
+        .grp_b7ds = 0x00000030,
+};
+
 const struct mx6_mmdc_calibration mx6_mmcd_calib = {
 	.p0_mpwldectrl0 =  0x001F001F,
 	.p0_mpwldectrl1 =  0x001F001F,
@@ -1498,8 +1558,11 @@ static void spl_dram_init(void)
 		.sde_to_rst = 0x10,	/* 14 cycles, 200us (JEDEC default) */
 		.rst_to_cke = 0x23,	/* 33 cycles, 500us (JEDEC default) */
 	};
-
+#ifdef CONFIG_MX6Q
 	mx6dq_dram_iocfg(mem_ddr.width, &mx6_ddr_ioregs, &mx6_grp_ioregs);
+#elif defined(CONFIG_MX6DL) 
+	mx6sdl_dram_iocfg(mem_ddr.width, &mx6sdl_ddr_ioregs, &mx6sdl_grp_ioregs);
+#endif
 	mx6_dram_cfg(&sysinfo, &mx6_mmcd_calib, &mem_ddr);
 }
 
@@ -1615,6 +1678,7 @@ void spi_io_init(struct imx_spi_dev_t *dev)
                 /* ecspi2-3 fall through */
                 break;
 #ifdef CONFIG_ADVANTECH
+#ifdef CONFIG_MX6Q
 #ifdef CONFIG_SPI_BOOT
         case ECSPI5_BASE_ADDR:
                 reg = readl(&ccm_regs->CCGR1);
@@ -1631,8 +1695,9 @@ void spi_io_init(struct imx_spi_dev_t *dev)
                 imx_iomux_v3_setup_pad(IOMUX_SPI5_CS2  | MUX_PAD_CTRL(NO_PAD_CTRL));
 #endif
                 break;
-#endif
-#endif
+#endif //CONFIG_SPI_BOOT
+#endif //CONFIG_MX6Q
+#endif //CONFIG_ADVANTECH
         default:
                 break;
         }
diff --git a/board/freescale/mx6advantech/mx6solorom5420b1_4x_MT41K128M16JT-125_1410022609-01_20151130.inc b/board/freescale/mx6advantech/mx6solorom5420b1_4x_MT41K128M16JT-125_1410022609-01_20151130.inc
new file mode 100755
index 0000000..b17bdf5
--- /dev/null
+++ b/board/freescale/mx6advantech/mx6solorom5420b1_4x_MT41K128M16JT-125_1410022609-01_20151130.inc
@@ -0,0 +1,178 @@
+//=============================================================================			
+//init script for i.MX6Solo DDR3 SabreSD			
+//=============================================================================			
+// Revision History			
+// v01			
+//=============================================================================			
+			
+wait = on			
+//=============================================================================			
+// Disable	WDOG		
+//=============================================================================			
+//setmem /16	0x020bc000 =	0x30	
+			
+//=============================================================================			
+// Enable all clocks (they are disabled by ROM code)			
+//=============================================================================			
+setmem /32	0x020c4068 =	0xffffffff	
+setmem /32	0x020c406c =	0xffffffff	
+setmem /32	0x020c4070 =	0xffffffff	
+setmem /32	0x020c4074 =	0xffffffff	
+setmem /32	0x020c4078 =	0xffffffff	
+setmem /32	0x020c407c =	0xffffffff	
+setmem /32	0x020c4080 =	0xffffffff	
+setmem /32	0x020c4084 =	0xffffffff	
+			
+//=============================================================================			
+// IOMUX			
+//=============================================================================			
+//DDR IO TYPE:			
+setmem /32	0x020e0774 =	0x000C0000	// IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE 
+setmem /32	0x020e0754 =	0x00000000	// IOMUXC_SW_PAD_CTL_GRP_DDRPKE 
+			
+//CLOCK:			
+setmem /32	0x020e04ac =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0
+setmem /32	0x020e04b0 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1
+			
+//ADDRESS:			
+setmem /32	0x020e0464 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
+setmem /32	0x020e0490 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
+setmem /32	0x020e074c =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_ADDDS 
+			
+//CONTROL:			
+setmem /32	0x020e0494 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET
+			
+setmem /32	0x020e04a0 =	0x00000000	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
+setmem /32	0x020e04b4 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
+setmem /32	0x020e04b8 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
+setmem /32	0x020e076c =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_CTLDS 
+			
+//DATA STROBE:			
+setmem /32	0x020e0750 =	0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL 
+			
+setmem /32	0x020e04bc =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0 
+setmem /32	0x020e04c0 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1 
+setmem /32	0x020e04c4 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2 
+setmem /32	0x020e04c8 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3 
+//setmem /32	0x020e04cc =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4 , not used for 32-bit bus
+//setmem /32	0x020e04d0 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5 , not used for 32-bit bus
+//setmem /32	0x020e04d4 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6 , not used for 32-bit bus
+//setmem /32	0x020e04d8 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7 , not used for 32-bit bus
+			
+//DATA:			
+setmem /32	0x020e0760 =	0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE
+			
+setmem /32	0x020e0764 =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B0DS 
+setmem /32	0x020e0770 =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B1DS 
+setmem /32	0x020e0778 =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B2DS 
+setmem /32	0x020e077c =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B3DS 
+//setmem /32	0x020e0780 =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B4DS , not used for 32-bit bus
+//setmem /32	0x020e0784 =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B5DS , not used for 32-bit bus
+//setmem /32	0x020e078c =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B6DS , not used for 32-bit bus
+//setmem /32	0x020e0748 =	0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B7DS , not used for 32-bit bus
+			
+setmem /32	0x020e0470 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
+setmem /32	0x020e0474 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
+setmem /32	0x020e0478 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2
+setmem /32	0x020e047c =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3
+//setmem /32	0x020e0480 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4, not used for 32-bit bus
+//setmem /32	0x020e0484 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5, not used for 32-bit bus
+//setmem /32	0x020e0488 =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6, not used for 32-bit bus
+//setmem /32	0x020e048c =	0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7, not used for 32-bit bus
+			
+//=============================================================================			
+// DDR Controller Registers			
+//=============================================================================			
+// Manufacturer:	Micron		
+// Device Part Number:	MT41J128M16HA-15E		
+// Clock Freq.: 	400MHz		
+// Density per CS in Gb: 	4		
+// Chip Selects used:	1		
+// Number of Banks:	8		
+// Row address:    	14		
+// Column address: 	10		
+// Data bus width	32		
+//=============================================================================			
+setmem /32	0x021b0800 =	0xa1390003 	// DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.
+			
+// write leveling, based on Freescale board layout and T topology			
+// For target board, may need to run write leveling calibration 			
+// to fine tune these settings			
+// If target board does not use T topology, then these registers			
+// should either be cleared or write leveling calibration can be run			
+setmem /32	0x021b080c = 	0x001F001F	
+setmem /32	0x021b0810 = 	0x001F001F	
+			
+//######################################################			
+//calibration values based on calibration compare of 0x00ffff00:			
+//Note, these calibration values are based on Freescale's board			
+//May need to run calibration on target board to fine tune these 			
+//######################################################			
+			
+//Read DQS Gating calibration			
+setmem /32	0x021b083c =	0x424C0250	// MPDGCTRL0 PHY0
+setmem /32	0x021b0840 =	0x02380244	// MPDGCTRL1 PHY0
+			
+//Read calibration			
+setmem /32	0x021b0848 =	0x42444648	// MPRDDLCTL PHY0
+			
+//Write calibration			
+setmem /32	0x021b0850 =	0x34363038	// MPWRDLCTL PHY0
+			
+//read data bit delay: (3 is the reccommended default value, although out of reset value is 0):			
+setmem /32	0x021b081c =	0x33333333	// DDR_PHY_P0_MPREDQBY0DL3
+setmem /32	0x021b0820 =	0x33333333	// DDR_PHY_P0_MPREDQBY1DL3
+setmem /32	0x021b0824 =	0x33333333	// DDR_PHY_P0_MPREDQBY2DL3
+setmem /32	0x021b0828 =	0x33333333	// DDR_PHY_P0_MPREDQBY3DL3
+//setmem /32	0x021b481c =	0x33333333	// DDR_PHY_P1_MPREDQBY0DL3, not used for 32-bit bus
+//setmem /32	0x021b4820 =	0x33333333	// DDR_PHY_P1_MPREDQBY1DL3, not used for 32-bit bus
+//setmem /32	0x021b4824 =	0x33333333	// DDR_PHY_P1_MPREDQBY2DL3, not used for 32-bit bus
+//setmem /32	0x021b4828 =	0x33333333	// DDR_PHY_P1_MPREDQBY3DL3, not used for 32-bit bus
+			
+// Complete calibration by forced measurement:			
+setmem /32	0x021b08b8 =	0x00000800 	// DDR_PHY_P0_MPMUR0, frc_msr
+//setmem /32	0x021b48b8 =	0x00000800 	// DDR_PHY_P1_MPMUR0, frc_msr, not used for 32-bit bus
+			
+//MMDC init:			
+setmem /32	0x021b0004 =	0x0002002D	// MMDC0_MDPDC 
+setmem /32	0x021b0008 =	0x00333030	// MMDC0_MDOTC
+setmem /32	0x021b000c =	0x3F435333	// MMDC0_MDCFG0
+setmem /32	0x021b0010 =	0xB68E8B63	// MMDC0_MDCFG1
+setmem /32	0x021b0014 =	0x01FF00DB	// MMDC0_MDCFG2
+setmem /32	0x021b0018 =	0x00001740	// MMDC0_MDMISC
+//NOTE about MDMISC RALAT:			
+//MDMISC: RALAT kept to the high level of 5 to ensure stable operation at 528MHz. 			
+//MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits: 			
+//a. better operation at low frequency			
+//b. Small performence improvment			
+			
+setmem /32	0x021b001c =	0x00008000	// MMDC0_MDSCR, set the Configuration request bit during MMDC set up
+setmem /32	0x021b002c =	0x000026d2	// MMDC0_MDRWD; recommend to maintain the default values
+setmem /32	0x021b0030 =	0x00431023	// MMDC0_MDOR
+setmem /32	0x021b0040 =	0x00000017	// CS0_END 
+			
+setmem /32	0x021b0000 =	0x83190000	// MMDC0_MDCTL
+			
+// Mode register writes			
+setmem /32	0x021b001c =	0x04008032	// MMDC0_MDSCR, MR2 write, CS0
+setmem /32	0x021b001c =	0x00008033	// MMDC0_MDSCR, MR3 write, CS0
+setmem /32	0x021b001c =	0x00048031	// MMDC0_MDSCR, MR1 write, CS0
+setmem /32	0x021b001c =	0x05208030	// MMDC0_MDSCR, MR0 write, CS0
+setmem /32	0x021b001c =	0x04008040	// MMDC0_MDSCR, ZQ calibration command sent to device on CS0
+			
+//setmem /32	0x021b001c =	0x0400803A	// MMDC0_MDSCR, MR2 write, CS1
+//setmem /32	0x021b001c =	0x0000803B	// MMDC0_MDSCR, MR3 write, CS1
+//setmem /32	0x021b001c =	0x00048039	// MMDC0_MDSCR, MR1 write, CS1
+//setmem /32	0x021b001c =	0x05208038	// MMDC0_MDSCR, MR0 write, CS1
+//setmem /32	0x021b001c =	0x04008048	// MMDC0_MDSCR, ZQ calibration command sent to device on CS1
+			
+			
+setmem /32	0x021b0020 =	0x00005800	// MMDC0_MDREF
+setmem /32	0x021b0818 =	0x00011117	// DDR_PHY_P0_MPODTCTRL
+//setmem /32	0x021b4818 =	0x00011117	// DDR_PHY_P1_MTCTRL, not used for 32-bit bus
+			
+			
+setmem /32	0x021b0004 =	0x0002556D	// MMDC0_MDPDC with PWDT bits set
+setmem /32	0x021b0404 = 	0x00011006	// MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.
+			
+setmem /32	0x021b001c =	0x00000000	// MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)
-- 
1.7.9.5

