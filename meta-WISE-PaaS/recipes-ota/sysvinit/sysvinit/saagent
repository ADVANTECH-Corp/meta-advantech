#! /bin/sh
# Reference from saagent of CentOS
# Start the RMM agent daemon
#
### BEGIN INIT INFO
# Provides: saagent
# Required-Start: 
# Required-Stop: 
# Default-Start:  3 4 5
# Default-Stop:   0 1 2 6
# Short-Description: RMM Agent server
# Description:    RMM Agent server
### END INIT INFO
# Return values acc. to LSB for all commands but status:
# 0       - success
# 1       - generic or unspecified error
# 2       - invalid or excess argument(s)
# 3       - unimplemented feature (e.g. "reload")
# 4       - user had insufficient privileges
# 5       - program is not installed
# 6       - program is not configured
# 7       - program is not running
# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signaling is not supported) are
# considered a success.

# be extra carefull cause connection fail if TMPDIR is not writeable
export TMPDIR="/cache"
export DBDIR="/cache/"

. /etc/init.d/functions

SAAGENT_DIR="/usr/local/AgentService/"
SAAGENT_BIN="${SAAGENT_DIR}cagent"
SAAGENT_CONF="${SAAGENT_DIR}agent_config.xml"
servername=$(sed -n 's:.*<ServiceName>\(.*\)</ServiceName>.*:\1:p' $SAAGENT_CONF)
SAAGENT_PID="/var/run/$servername.pid"
SAAGENT_LOCK="/var/lock/subsys/cagent"
SAAGENT_LOG="/var/log/cagent.log"

RETVAL=0
curpid=0
#Override Function
getpid() {
	if [ -n "`command -v pidof`" ]; then
        	pid=`pidof $1`
        elif [ -n "`command -v pidofproc`" ]; then
        	pid=`pidofproc $1`
        else
		pid=0
        	echo "Failed read PID."
        fi
}

waitpid() {
	echo "wait pid $1"
	cntdwn=20
	waitresult=1
	while [ -e /proc/$1 ] && [ $cntdwn -gt 0 ]
	do
		sleep 1
		cntdwn=`expr $cntdwn - 1`
	done
	[ $cntdwn -eq 0 ] && waitresult=0
}

killproc() { # kill the named process(es)
	if [ -e "${SAAGENT_PID}" ]; then
		curpid=`cat ${SAAGENT_PID}`
		[ -e /proc/$curpid ] && kill -s 15 $curpid
		[ -e /proc/$curpid ] && waitpid $curpid
	else
		curpid=0
	fi

        if [ -n "`command -v pidof`" ]; then
        	pidlist=`pidof $1`
        elif [ -n "`command -v pidofproc`" ]; then
        	pidlist=`pidofproc $1`
        else
        	echo "Failed read PID."
        fi

	for pid in $pidlist
	do
		waitresult=1
		[ -e /proc/$pid ] && kill -s 15 $pid
		[ -e /proc/$pid ] && waitpid $pid
		if [ $waitresult -eq 0 ]; then
			echo "Wait $pid timeout."
			[ -e /proc/$pid ] && kill -s 9 $pid
		fi
	done
}
# Check for missing binary
if [ ! -x ${SAAGENT_BIN} ]; then
	echo -n 1>&2 "RMM Agent daemon, ${SAAGENT_BIN} is not installed."
	echo 
	exit 5
fi

case "$1" in
	start)
		#check configure file
		if [ ! -f ${SAAGENT_CONF} ]; then
			echo -n >&2 "RMM Agent configuration file, ${SAAGENT_CONF} does not exist. "
			exit 6
		fi
		#action
		if [ -f ${SAAGENT_LOCK} ]; then						
			echo -n "RMM Agent daemon already running."
			echo 
			exit 1
		else 
			echo -n "Starting RMM Agent daemon..."
			##daemon "${SAAGENT_BIN}"
			cd ${SAAGENT_DIR}
			./cagent >/dev/null 2>&1 &		
			RETVAL=$?
			[ $RETVAL -eq 0 ] && touch ${SAAGENT_LOCK}
			echo
		fi
		;;
		
	stop)
		#check service status
		if [ -f ${SAAGENT_LOCK} ]; then
			echo -n "Shutting down RMM Agent daemon..."
			getpid "${SAAGENT_BIN}"	
			if [ "${pid}" = "0" ]; then
				RETVAL=0
			elif [ -z "${pid}" ]; then
				RETVAL=0
			else
				killproc "${SAAGENT_BIN}"		
				RETVAL=$?
			fi
			[ $RETVAL -eq 0 ] && rm -f ${SAAGENT_LOCK}
			[ $RETVAL -eq 0 ] && rm -f ${SAAGENT_PID}
			echo
		else
			echo -n "RMM Agent daemon is not running."
			echo 
			exit 1
		fi
		;;		

	restart)
		$0 stop
		$0 start
		;;

	status)
		status cagent
    RETVAL=$?
		;;
		
	condrestart)
		if [ -f ${SAAGENT_LOCK} ]; then
			$0 restart
		fi
		;;
	*)
		echo "Usage: $0 {start|stop|status|restart|condrestart}"
		exit 1
		;;
esac
exit $RETVAL

